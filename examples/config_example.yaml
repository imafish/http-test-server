server:
    addr: ":8080"
    cert_file:
    key_file:

rules:
    # Add new device (successful)
    -   request:
            path: "/api"
            headers:
                -   include: "Content-Type: application/json-rpc"
                -   include: "Accept: application/json"
            method: "POST"
            body:
                # match type can be 'loose|strict'
                # loose: for object, rule matches if fields in value all all found in the incoming request body. strings are matched using regex.
                # strict: for object, rule matches only if value and incoming request body are exact match. strings are matched using string equal.
                match_rule: "strict"
                value:
                    jsonrpc: "2.0"
                    id: 123
                    method: "account_add_device"
                    params:
                        customer: "8de7e06e7590cf5b1eb6309cb6ce888c060d4a0217f22466b326c7e4408ff5d81b025e671d2e8e385ce54fb8849190b1"
                        name: "my new device"
                        type: "OTG"
                        version: "2.0.1"
        response:
            status: 200
            headers:
                -   "Content-Type: application/json"
            body:
                jsonrpc: "2.0"
                id: 123
                result:
                    name: "my new device@1234567890ABCDEF"
                    type: "OTG"
                    device: "4e98e18e-2f32-4538-a8df-0a626e46fd7c"

    # Add new device with the invalid JSON query
    -   request:
            path: "/api"
            headers:
                -   include: "Content-Type: application/json-rpc"
                -   include: "Accept: application/json"
            method: "POST"
            body:
                match_rule: "strict"
                value: '{"jsonrpc":"2.0","id":8889,"method":"account_add_device","params":{ "customer":"8de7e06e7590cf5b1eb6309cb6ce888c060d4a0217f22466b326c7e4408ff5d81b025e671d2e8e385ce54fb8849190b1", "name":"My new device", "type":"OTG" "version":"2.0.1"}}'
        response:
            status: 200
            headers:
                -   "Content-Type: application/json"
            body:
                jsonrpc: "2.0"
                id: null
                error:
                    code: -32700
                    message: "Parse error Invalid JSON was received by the server."
                    data: "An error occurred on the server while parsing the JSON text."

    # Add new device with the invalid RPC method
    -   request:
        path: "/api"
        headers:
            -   include: "Content-Type: application/json-rpc"
            -   include: "Accept: application/json"
        method: "POST"
        body:
            match_rule: "strict"
            value:
                jsonrpc: "2.0"
                id: 123
                method: "account_add_devices"
                params:
                    customer: "8de7e06e7590cf5b1eb6309cb6ce888c060d4a0217f22466b326c7e4408ff5d81b025e671d2e8e385ce54fb8849190b1"
                    name: "my new device"
                    type: "OTG"
                    version: "2.0.1"
        response:
            status: 200
            headers:
                -   "Content-Type: application/json"
            body:
                jsonrpc: "2.0"
                id: 123
                error:
                    code: -32601
                    message: "Method not found."
                    data: "The method (account_add_devices) does not exist or is not available."

    # Add new device with the invalid customer key
    -   request:
            path: "/api"
            headers:
                -   include: "Content-Type: application/json-rpc"
                -   include: "Accept: application/json"
            method: "POST"
            body:
                match_rule: "strict"
                value:
                    jsonrpc: "2.0"
                    id: 123
                    method: "account_add_device"
                    params:
                        customer: "123"
                        name: "my new device"
                        type: "OTG"
                        version: "2.0.1"
        response:
            status: 200
            headers:
                -   "Content-Type: application/json"
            body:
                jsonrpc: "2.0"
                id: 123
                error:
                    code: 1
                    message: "Unauthorized"
                    data: " failed for a customer using key ..._INVALID_KEY (10.1.8.2)"
    
    # Add new device with missing version field
    -   request:
            path: "/api"
            headers:
                -   include: "Content-Type: application/json-rpc"
                -   include: "Accept: application/json"
            method: "POST"
            body:
                match_rule: "loose"
                value:
                    jsonrpc: "2.0"
                    id: 123
                    method: "account_add_device"
                    params:
                        customer: "8de7e06e7590cf5b1eb6309cb6ce888c060d4a0217f22466b326c7e4408ff5d81b025e671d2e8e385ce54fb8849190b1"
                        name: "my new device"
                        type: "OTG"
        response:
            status: 200
            headers:
                -   "Content-Type: application/json"
            body:
                jsonrpc: "2.0"
                id: 123
                error:
                    code: 3
                    message: "Execution Error"
                    data: " some required arguments are missing  (10.1.8.2)"

    # Add new device with the invalid device type
    -   request:
            path: "/api"
            headers:
                -   include: "Content-Type: application/json-rpc"
                -   include: "Accept: application/json"
            method: "POST"
            body:
                match_rule: "strict"
                value:
                    jsonrpc: "2.0"
                    id: 123
                    method: "account_add_device"
                    params:
                        customer: "8de7e06e7590cf5b1eb6309cb6ce888c060d4a0217f22466b326c7e4408ff5d81b025e671d2e8e385ce54fb8849190b1"
                        name: "my new device"
                        type: "KOF"
                        version: "2.0.1"
        response:
            status: 200
            headers:
                -   "Content-Type: application/json"
            body:
                jsonrpc: "2.0"
                id: 123
                error:
                    code: 3
                    message: "Execution Error"
                    data: "unable to register a device by [My new device|KOF|2.0.1]: Invalid device type. Must be one of: OTG, DNSP"
 
    # To download certificate
    -   request:
            path: "/file/download"
            method: "GET"
        response:
            headers:
                -   "Content-Type: stream"
            file: "./resource/ca.cer"

    # A test method.
    -   request:
            path: "/test"
            method: "POST"
            headers:
                -   include: "Content-Type: application/json"
            body:
                # match type can be 'loose|strict'
                # loose: for object, rule matches if fields in value all all found in the incoming request body. strings are matched using regex.
                # strict: for object, rule matches only if value and incoming request body are exact match. strings are matched using string equal.
                match_rule: "loose"
                value:
                    jsonrpc: "2.0"
                    id: 123
                    method: "account_add_device"
                    params:
                        customer: "8de7e06e7590cf5b1eb6309cb6ce888c060d4a0217f22466b326c7e4408ff5d81b025e671d2e8e385ce54fb8849190b1"
                        name: "my new device"
                        type: "OTG"
                        version: "2.0.1"
        response:
            status: 200
            headers:
                - "Content-Type: text/plain"
            body:
                object: "hello, world"
